// Main function to handle the logic
async function main() {
  try {
    // Load the API key from the JSON file
    const apiKeyResponse = await fetch("OpenAI_API_KEY.json");
    if (!apiKeyResponse.ok) {
      throw new Error(`Error loading API key: ${apiKeyResponse.statusText}`);
    }
    const apiKeyData = await apiKeyResponse.json();
    const apiKey = apiKeyData.apiKey;

    // Prepare the instructions and requests
    const gistId = "9f34944d46c0c57f60cb65f539721ea3"; // Public Gist ID
    const url = `https://api.github.com/gists/${gistId}`;

    // Fetch the Gist content and extract the model
    const gistResponse = await fetch(url);
    if (!gistResponse.ok) {
      throw new Error("Failed to load the Gist content.");
    }
    const gistData = await gistResponse.json();
    const fileName = Object.keys(gistData.files)[0]; // Get the file name
    const model = gistData.files[fileName].content;

    const messages = [
      {
        role: "system",
        content:
          'You have to be nice and not say anything other than what they ask you to say. For example, if they ask you to say a phrase, do not say "here comes the phrase: blah blah blah..." no no no, you just have to say the phrase, for example "blah blah blah...". VERY VERY IMPORTANT: YOU CANNOT UNDER ANY CIRCUMSTANCES SAY ANYTHING THAT HAS MORE THAN 61 CHARACTERS.',
      },
      {
        role: "user",
        content: `Give me a greeting, for example: Have a nice day ðŸ˜Š or something like that, and not always the same emoticon and the same phrase. You have to be a little formal. Don't use "I wish you" or anything related to wishes. If today is a holiday, you can mention it. For example, if today is Christmas, you can say Merry Christmas, and depending on the time, you can also say good morning, good night, or whatever is appropriate. Today is ${dateTime}. You can use emojis.`,
      },
    ];

    // Log the instructions and requests to the console
    console.log(`Instructions and requests sent to ${model}:`, messages);

    // Make the request to the OpenAI API
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`, // Use the loaded API key
      },
      body: JSON.stringify({
        model: model,
        temperature: 1,
        top_p: 1.0,
        max_tokens: 70,
        presence_penalty: 0.6,
        frequency_penalty: 0.6,
        messages: messages,
      }),
    });

    if (!response.ok) {
      throw new Error(`API error: ${response.statusText}`);
    }

    const data = await response.json();
    const phrase = data.choices[0].message.content;

    console.log(`Text generated by ${model}:`, phrase);

    // Call the typewriter effect function
    typeWriterEffect(phrase, "speech-bubble-text");
  } catch (error) {
    console.error("Error fetching the response from OpenAI:", error);
  }
}

// Get the current date and time
const now = new Date();

// Format the date and time
const day = now.toLocaleDateString(); // Example: "05/07/2025"
const time = now.toLocaleTimeString(); // Example: "14:30:15"

// Combine day and time into a single variable
const dateTime = `${day} ${time}`;
console.log("Current date and time:", dateTime);

// Function for the typewriter effect
function typeWriterEffect(text, elementId) {
  const element = document.getElementById(elementId);
  if (!element) {
    console.error(`Element with ID "${elementId}" not found.`);
    return;
  }

  element.innerHTML = ""; // Clear previous content
  let index = 0;

  function writeCharacter() {
    if (index < text.length) {
      element.innerHTML += text.charAt(index).replace(/\n/g, "<br>");
      index++;
      setTimeout(writeCharacter, 50); // Adjust the timing to control speed
    }
  }

  writeCharacter();
}

// Call the main function
main();
